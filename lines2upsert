#!/usr/bin/env ruby

dict = {}
columns = []
values = []
$stdin.read.split("\n").map do |line|
  key, value = line.split("=")
  dict[key] = value
  columns << key
  values << value
end

def to_value(v)
  begin
    Float(v)
    v.to_s
  rescue
    "'#{v.to_s}'"
  end
end

table = ARGV[0]
keyfields = ARGV[1..-1].map{ |key| "#{key} = #{to_value(dict[key])}" }.join(", ")
setfields = columns.zip(values).map{ |c, v| "#{c} = #{to_value(v)}" }.join(", ")
puts "UPDATE #{table} SET #{setfields} WHERE #{keyfields};"
puts "INSERT INTO #{table} (#{columns.join(", ")})"
puts "       SELECT #{values.map{|v|to_value(v)}.join(", ")}"
puts "       WHERE NOT EXISTS (SELECT 1 FROM #{table} WHERE #{keyfields});"


